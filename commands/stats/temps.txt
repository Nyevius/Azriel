const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
      .setName('me')
      .setDescription('Shows user statistics'),
    async execute(interaction) {
      const { user } = interaction;
      const guild = interaction.guild;

      // Get the last message sent by the user
      const lastMessage = (await user.fetch()).lastMessage;
      const lastMessageDate = lastMessage ? lastMessage.createdAt : 'Never';

      // Get the last voice state update for the user
      const lastVoiceStateUpdate = guild.voiceStates.cache.find(s => s.id === user.id)?.updatedAt;
      const lastVoiceStateUpdateDate = lastVoiceStateUpdate ? lastVoiceStateUpdate.toLocaleString() : 'Never';

      // Get the number of messages sent by the user in the last 30 days
      const messagesSent = (await guild.channels.cache.filter(channel => channel.type === 'GUILD_TEXT').map(async channel => {
        const messages = await channel.messages.fetch({ limit: 100 });
        return messages.filter(m => m.author.id === user.id && m.createdTimestamp >= Date.now() - 30 * 24 * 60 * 60 * 1000);
      })).reduce((acc, val) => acc.concat(val), []);

      // Get the number of hours spent by the user in voice channels in the last 30 days
      const voiceStates = guild.voiceStates.cache.filter(s => s.id === user.id && s.channelId);
      const voiceChannelDurations = voiceStates.map(s => {
        const duration = (s.updatedAt - s.sessionID.createdTimestamp) / 1000 / 60 / 60;
        return duration >= 0 ? duration : 0;
      });
      const totalVoiceChannelDuration = voiceChannelDurations.reduce((acc, val) => acc + val, 0);

      // Get the user's roles
      const roles = interaction.member.roles.cache.map(role => role.toString()).join(', ')

      const embed = new EmbedBuilder()
      .setColor(interaction.member.displayHexColor)
      .setFooter({ text: `${interaction.user.tag} | Powered by Azraelios`, iconURL: 'https://cdn.discordapp.com/attachments/509430822491783168/1102249346394771506/FutureGirl_2.png' })
      .setThumbnail(interaction.user.avatarURL({dynamic: true}))
      .setTitle(`${user.username}'s Statistics`)
      .addFields(
      { 
        name: 'User Information', 
        value: `ID: ${interaction.user.id}\n` +
               `Roles: ${interaction.member.roles.cache.size >= 5 ? "Roles are too much..." : interaction.member.roles.cache.map(role => role.toString()).join(', ')}\n` +
               `Nickname: ${interaction.member.displayName}`, inline : true
      },
      {
        name: 'Voice Activity',
        value: `Last Activity: ${lastMessageDate}`, inline : true
      },
		  { 
        name: 'Message Activity', 
        value: `Last Activity: ${lastMessageDate}`, inline : true
      })
      //.addField('Messages Sent in the Last 30 Days', messagesSent.length)
      //.addField('Hours Spent in Voice Channels in the Last 30 Days', totalVoiceChannelDuration.toFixed(2))

      await interaction.reply({ embeds: [embed] });
    },
};